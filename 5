#include <stdio.h>
#define INFINITY 999

void dijkstra(int cost[10][10], int n, int source, int distance[10]) {
    int visited[10], min, u;

    for (int i = 1; i <= n; i++) {
        distance[i] = cost[source][i];
        visited[i] = 0;
    }

    visited[source] = 1;

    for (int i = 1; i <= n; i++) {
        min = INFINITY;

        for (int j = 1; j <= n; j++) {
            if (!visited[j] && distance[j] < min) {
                min = distance[j];
                u = j;
            }
        }

        visited[u] = 1;

        for (int j = 1; j <= n; j++) {
            if (!visited[j] && (distance[u] + cost[u][j]) < distance[j]) {
                distance[j] = distance[u] + cost[u][j];
            }
        }
    }
}

int main() {
    int n, cost[10][10], distance[10], source;

    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    printf("Enter the cost matrix (999 for no edge):\n");
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            scanf("%d", &cost[i][j]);
        }
    }

    printf("Enter the source node: ");
    scanf("%d", &source);

    dijkstra(cost, n, source, distance);

    for (int i = 1; i <= n; i++) {
        printf("\nShortest distance from %d to %d is %d", source, i, distance[i]);
    }

    return 0;
}
